{"version":3,"sources":["admin.js"],"names":["$","job","ajax","bp","message","nonce","find","data","process","post","ajaxurl","action","done","fail","failed","start","e","preventDefault","val","addClass","html","concat","stop","abort","error","console","removeClass","status","parseJSON","back","on","jQuery"],"mappings":"cACC,SAAUA,GACT,IAAIC,EAAM,KACNC,EAAO,KACLC,EAAKH,EAAE,eACPI,EAAUJ,EAAE,uBACZK,EAAQF,EAAGG,KAAK,oBAAoBC,KAAK,SAQ/C,SAASC,EAAQA,GACfN,EAAOF,EAAES,KAAKC,QAAS,CAAEC,OAAQ,aAAcV,IAAAA,EAAKI,MAAAA,EAAOG,QAAAA,IACxDI,KAAKA,GACLC,KAAKC,GAIV,SAASC,EAAMC,GACbA,EAAEC,iBAEFhB,EAAME,EAAGG,KAAK,2BAA2BY,MAEzCV,EAAQ,SACRL,EAAGgB,SAAS,yBACZf,EAAQgB,KAAR,UAAAC,OAAuBpB,EAAvB,aAAAoB,OAAsCjB,EAAQG,KAAK,aAIrD,SAASe,IACP,IACEpB,EAAKqB,QACL,MAAOC,GACPC,QAAQD,MAAR,UAAAH,OAAwBG,IAH1B,QAKEhB,EAAQ,QACRL,EAAGuB,YAAY,0BAKnB,SAASd,EAAKL,GAIZ,GAFAoB,EADApB,EAAOP,EAAE4B,UAAUrB,IAGC,eAAhBA,EAAKoB,OACP,OAAOnB,EAAQ,OAKnB,SAASM,EAAOP,GACdoB,EAAO3B,EAAE4B,UAAUrB,IACnBJ,EAAGgB,SAAS,oBAId,SAASQ,EAAOpB,GACdH,EAAQgB,KAAR,UAAAC,OAAuBpB,EAAvB,aAAAoB,OAAsCd,EAAKH,UAC3CD,EAAGgB,SAAS,cAAgBZ,EAAKoB,QAInC,SAASE,IACP1B,EAAGuB,YAAY,0DA1DjBvB,EAAG2B,GAAG,SAAU,mBAAoBf,GACpCZ,EAAG2B,GAAG,QAAS,mBAAoBR,GACnCnB,EAAG2B,GAAG,QAAS,mBAAoBD,GAVpC,CAoEEE","sourcesContent":["/* Run updater */\n;(function($) {\n  let job = null\n  let ajax = null\n  const bp = $('.batchpress')\n  const message = $('.batchpress-message')\n  const nonce = bp.find('.batchpress-form').data('nonce')\n\n  // Events\n  bp.on('submit', '.batchpress-form', start)\n  bp.on('click', '.batchpress-stop', stop)\n  bp.on('click', '.batchpress-back', back)\n\n  // Make the ajax request\n  function process(process) {\n    ajax = $.post(ajaxurl, { action: 'batchpress', job, nonce, process })\n      .done(done)\n      .fail(failed)\n  }\n\n  // Start and setup queue\n  function start(e) {\n    e.preventDefault()\n\n    job = bp.find('input[name=job]:checked').val()\n\n    process('start')\n    bp.addClass('batchpress-processing')\n    message.html(`<small>${job}</small> ${message.data('message')}`)\n  }\n\n  // Stop and clear queue\n  function stop() {\n    try {\n      ajax.abort()\n    } catch (error) {\n      console.error(`Abort: ${error}`);\n    } finally {\n      process('stop')\n      bp.removeClass('batchpress-processing')\n    }\n  }\n\n  // Handle ajax done event\n  function done(data) {\n    data = $.parseJSON(data)\n    status(data)\n\n    if (data.status === 'processing') {\n      return process('run')\n    }\n  }\n\n  // Handle ajax failed event\n  function failed(data) {\n    status($.parseJSON(data))\n    bp.addClass('batchpress-error')\n  }\n\n  // Update the on page status\n  function status(data) {\n    message.html(`<small>${job}</small> ${data.message}`)\n    bp.addClass('batchpress-' + data.status)\n  }\n\n  // Go back to start screen\n  function back() {\n    bp.removeClass('batchpress-done batchpress-error batchpress-processing')\n  }\n})(jQuery)\n"]}