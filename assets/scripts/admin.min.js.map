{"version":3,"sources":["admin.js"],"names":["$","job","ajax","bp","message","nonce","find","data","ready","attr","process","post","ajaxurl","action","done","fail","failed","start","e","preventDefault","val","addClass","html","concat","stop","abort","error","console","removeClass","status","parse","back","parseJSON","on","jQuery"],"mappings":"cACA,SAAUA,GACR,IAAIC,EAAM,KACNC,EAAO,KACLC,EAAKH,EAAE,eACPI,EAAUJ,EAAE,uBACZK,EAAQF,EAAGG,KAAK,oBAAoBC,KAAK,SAS/C,SAASC,IACPL,EAAGG,KAAK,sBAAsBG,KAAK,YAAY,GAIjD,SAASC,EAAQA,GACfR,EAAOF,EAAEW,KAAKC,QAAS,CAAEC,OAAQ,aAAcZ,IAAAA,EAAKI,MAAAA,EAAOK,QAAAA,IACxDI,KAAKA,GACLC,KAAKC,GAIV,SAASC,EAAMC,GACbA,EAAEC,iBAEFlB,EAAME,EAAGG,KAAK,2BAA2Bc,MAEzCV,EAAQ,SACRP,EAAGkB,SAAS,yBACZjB,EAAQkB,KAAR,UAAAC,OAAuBtB,EAAvB,aAAAsB,OAAsCnB,EAAQG,KAAK,aAIrD,SAASiB,IACP,IACEtB,EAAKuB,QACL,MAAOC,GACPC,QAAQD,MAAR,UAAAH,OAAwBG,IAH1B,QAKEhB,EAAQ,QACRP,EAAGyB,YAAY,2CAKnB,SAASd,EAAKP,GAKZ,GAFAsB,EAFAtB,EAAOuB,EAAMvB,IAIO,eAAhBA,EAAKsB,OACP,OAAOnB,EAAQ,OAKnB,SAASM,EAAOT,GACdsB,EAAOC,EAAMvB,IACbJ,EAAGkB,SAAS,oBAId,SAASQ,EAAOtB,GACdH,EAAQkB,KAAR,UAAAC,OAAuBtB,EAAvB,aAAAsB,OAAsChB,EAAKH,UAC3CD,EAAGkB,SAAS,cAAgBd,EAAKsB,QAInC,SAASE,IACP5B,EAAGyB,YAAY,0DAIjB,SAASE,EAAMvB,GACb,IACE,OAAOP,EAAEgC,UAAUzB,GACnB,MAAOmB,GACP,MAAO,CAAEG,OAAQ,QAASzB,QAASsB,IAzEvCvB,EAAG8B,GAAG,QAAS,qBAAsBzB,GACrCL,EAAG8B,GAAG,SAAU,mBAAoBhB,GACpCd,EAAG8B,GAAG,QAAS,mBAAoBT,GACnCrB,EAAG8B,GAAG,QAAS,mBAAoBF,GAXrC,CAoFGG","sourcesContent":["/* Run updater */\n(function($) {\n  let job = null\n  let ajax = null\n  const bp = $('.batchpress')\n  const message = $('.batchpress-message')\n  const nonce = bp.find('.batchpress-form').data('nonce')\n\n  // Events\n  bp.on('click', '.batchpress-option', ready)\n  bp.on('submit', '.batchpress-form', start)\n  bp.on('click', '.batchpress-stop', stop)\n  bp.on('click', '.batchpress-back', back)\n\n  // Start and setup queue\n  function ready() {\n    bp.find('.batchpress-button').attr('disabled', false)\n  }\n\n  // Make the ajax request\n  function process(process) {\n    ajax = $.post(ajaxurl, { action: 'batchpress', job, nonce, process })\n      .done(done)\n      .fail(failed)\n  }\n\n  // Start and setup queue\n  function start(e) {\n    e.preventDefault()\n\n    job = bp.find('input[name=job]:checked').val()\n\n    process('start')\n    bp.addClass('batchpress-processing')\n    message.html(`<small>${job}</small> ${message.data('message')}`)\n  }\n\n  // Stop and clear queue\n  function stop() {\n    try {\n      ajax.abort()\n    } catch (error) {\n      console.error(`Abort: ${error}`)\n    } finally {\n      process('stop')\n      bp.removeClass('batchpress-processing batchpress-error')\n    }\n  }\n\n  // Handle ajax done event\n  function done(data) {\n    data = parse(data)\n\n    status(data)\n\n    if (data.status === 'processing') {\n      return process('run')\n    }\n  }\n\n  // Handle ajax failed event\n  function failed(data) {\n    status(parse(data))\n    bp.addClass('batchpress-error')\n  }\n\n  // Update the on page status\n  function status(data) {\n    message.html(`<small>${job}</small> ${data.message}`)\n    bp.addClass('batchpress-' + data.status)\n  }\n\n  // Go back to start screen\n  function back() {\n    bp.removeClass('batchpress-done batchpress-error batchpress-processing')\n  }\n\n  // Parse JSON response\n  function parse(data) {\n    try {\n      return $.parseJSON(data)\n    } catch (error) {\n      return { status: 'error', message: error }\n    }\n  }\n})(jQuery)\n"]}