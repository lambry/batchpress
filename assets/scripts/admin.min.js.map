{"version":3,"sources":["admin.js"],"names":["$","job","ajax","bp","message","log","nonce","find","data","ready","attr","process","post","ajaxurl","action","done","fail","failed","start","e","preventDefault","val","addClass","html","concat","stop","abort","error","console","empty","removeClass","status","parse","append","map","entry","back","parseJSON","on","jQuery"],"mappings":"cACA,SAAUA,GACR,IAAIC,EAAM,KACNC,EAAO,KACLC,EAAKH,EAAE,eACPI,EAAUJ,EAAE,uBACZK,EAAML,EAAE,sBACRM,EAAQH,EAAGI,KAAK,oBAAoBC,KAAK,SAS/C,SAASC,IACPN,EAAGI,KAAK,sBAAsBG,KAAK,YAAY,GAIjD,SAASC,EAAQA,GACfT,EAAOF,EAAEY,KAAKC,QAAS,CAAEC,OAAQ,aAAcb,IAAAA,EAAKK,MAAAA,EAAOK,QAAAA,IACxDI,KAAKA,GACLC,KAAKC,GAIV,SAASC,EAAMC,GACbA,EAAEC,iBAEFnB,EAAME,EAAGI,KAAK,2BAA2Bc,MAEzCV,EAAQ,SACRR,EAAGmB,SAAS,yBACZlB,EAAQmB,KAAR,UAAAC,OAAuBvB,EAAvB,aAAAuB,OAAsCpB,EAAQI,KAAK,aAIrD,SAASiB,IACP,IACEvB,EAAKwB,QACL,MAAOC,GACPC,QAAQD,MAAR,UAAAH,OAAwBG,IAH1B,QAKEhB,EAAQ,QACRN,EAAIwB,QACJ1B,EAAG2B,YAAY,2CAKnB,SAASf,EAAKP,GAKZ,GAFAuB,EAFAvB,EAAOwB,EAAMxB,IAIO,eAAhBA,EAAKuB,OACP,OAAOpB,EAAQ,OAKnB,SAASM,EAAOT,GACduB,EAAOC,EAAMxB,IACbL,EAAGmB,SAAS,oBAId,SAASS,EAAOvB,GACdH,EAAI4B,OAAOzB,EAAKH,IAAI6B,KAAI,SAAAC,GAAK,MAAA,OAAAX,OAAWW,EAAX,aAC7B/B,EAAQmB,KAAR,UAAAC,OAAuBvB,EAAvB,aAAAuB,OAAsChB,EAAKJ,UAC3CD,EAAGmB,SAAS,cAAgBd,EAAKuB,QAInC,SAASK,IACP/B,EAAIwB,QACJ1B,EAAG2B,YAAY,0DAIjB,SAASE,EAAMxB,GACb,IACE,OAAOR,EAAEqC,UAAU7B,GACnB,MAAOmB,GACP,MAAO,CAAEI,OAAQ,QAAS3B,QAASuB,IA5EvCxB,EAAGmC,GAAG,QAAS,qBAAsB7B,GACrCN,EAAGmC,GAAG,SAAU,mBAAoBpB,GACpCf,EAAGmC,GAAG,QAAS,mBAAoBb,GACnCtB,EAAGmC,GAAG,QAAS,mBAAoBF,GAZrC,CAwFGG","sourcesContent":["/* Run updater */\n(function($) {\n  let job = null\n  let ajax = null\n  const bp = $('.batchpress')\n  const message = $('.batchpress-message')\n  const log = $('.batchpress-log ul')\n  const nonce = bp.find('.batchpress-form').data('nonce')\n\n  // Events\n  bp.on('click', '.batchpress-option', ready)\n  bp.on('submit', '.batchpress-form', start)\n  bp.on('click', '.batchpress-stop', stop)\n  bp.on('click', '.batchpress-back', back)\n\n  // Start and setup queue\n  function ready() {\n    bp.find('.batchpress-button').attr('disabled', false)\n  }\n\n  // Make the ajax request\n  function process(process) {\n    ajax = $.post(ajaxurl, { action: 'batchpress', job, nonce, process })\n      .done(done)\n      .fail(failed)\n  }\n\n  // Start and setup queue\n  function start(e) {\n    e.preventDefault()\n\n    job = bp.find('input[name=job]:checked').val()\n\n    process('start')\n    bp.addClass('batchpress-processing')\n    message.html(`<small>${job}</small> ${message.data('message')}`)\n  }\n\n  // Stop and clear queue\n  function stop() {\n    try {\n      ajax.abort()\n    } catch (error) {\n      console.error(`Abort: ${error}`)\n    } finally {\n      process('stop')\n      log.empty()\n      bp.removeClass('batchpress-processing batchpress-error')\n    }\n  }\n\n  // Handle ajax done event\n  function done(data) {\n    data = parse(data)\n\n    status(data)\n\n    if (data.status === 'processing') {\n      return process('run')\n    }\n  }\n\n  // Handle ajax failed event\n  function failed(data) {\n    status(parse(data))\n    bp.addClass('batchpress-error')\n  }\n\n  // Update the on page status\n  function status(data) {\n    log.append(data.log.map(entry => `<li>${entry}</li>`))\n    message.html(`<small>${job}</small> ${data.message}`)\n    bp.addClass('batchpress-' + data.status)\n  }\n\n  // Go back to start screen\n  function back() {\n    log.empty()\n    bp.removeClass('batchpress-done batchpress-error batchpress-processing')\n  }\n\n  // Parse JSON response\n  function parse(data) {\n    try {\n      return $.parseJSON(data)\n    } catch (error) {\n      return { status: 'error', message: error }\n    }\n  }\n})(jQuery)\n"]}